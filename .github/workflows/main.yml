name: CI Pipeline

on: [push, pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Run ruff
        uses: astral-sh/ruff-action@v3


  upload-artifacts:
    name: Upload KHM Source Texts as Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install the project
        run: uv sync --locked

      - name: Download files from the DTA server
        #run: uv run khm-analyzer download-all-sources "khm-sources/khm.xml"
        run: uv run khm-analyzer download-source 1 1 "khm-sources/khm-ed1-vol1.xml"

      - name: Upload files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: khm-sources

  test:
    needs: upload-artifacts
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.11, 3.12, 3.13]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: artifacts
          path: khm-sources

      - name: Test the Presence of Artifacts
        if: runner.os == 'Linux'
        run: |
          [ 1 -eq $(find . -type f -name "khm-*" | sort | tee file_list.txt | wc -l) ]
          cat file_list.txt && rm file_list.txt

      - name: Test the Presence of Artifacts
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $fileList = Get-ChildItem -File -Recurse -Filter "khm-*" | Sort-Object FullName
          $fileList.FullName | Out-File -FilePath file_list.txt -Encoding utf8
          $isEqual = ($fileList.Count -eq 1)
          Get-Content file_list.txt
          Remove-Item file_list.txt

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --group test

      - name: Test
        run: uv run pytest -v

  test-freebsd:
    needs: upload-artifacts
    runs-on: ubuntu-latest

    name: Test on FreeBSD in VM
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: artifacts
          path: khm-sources

      - name: Test in FreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          release: "14.3"
          usesh: true
          sync: ".,khm-sources"
          copyback: false
          prepare: |
            pkg install -y libxml2 libxslt python311 rust uv
          run: |
            echo "===== Test the presence of artifacts ====="
            #[ 14 -eq $(find khm-sources -type f -name "khm-*" | sort | tee file_list.txt | wc -l) ]
            [ 1 -eq $(find khm-sources -type f -name "khm-*" | sort | tee file_list.txt | wc -l) ]
            cat file_list.txt && rm file_list.txt
            echo "===== Install the project ====="
            uv sync --locked --group test
            echo "===== Test the code ====="
            uv run pytest -v
