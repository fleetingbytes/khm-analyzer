name: CI Pipeline

on: [push, pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4
        uses: astral-sh/ruff-action@v3


  create-artifacts:
    name: Download files
    runs-on: ubuntu-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install the project
        run: uv sync --locked --extra lint

      - name: Download files from the DTA server
        #run: uv run khm-analyzer download-all-sources "khm-sources/khm.xml"
        run: uv run khm-analyzer download-source 1 1 "khm-sources/khm-ed1-vol1.xml"

      - name: Upload files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: khm-sources

  #test:
    #needs: upload-artifacts
    #strategy:
      #matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        #python-version: [3.11, 3.12, 3.13]
    #runs-on: ${{ matrix.os }}

    #steps:
      #- name: Check out project
        #uses: actions/checkout@v4

      #- name: Download shared files
        #uses: actions/download-artifact@v5
        #with:
          #name: artifacts
          #path: khm-sources

      #- name: Test the presence of shared files
        #run: |
          #[ 14 -eq $(find . -type f -name "khm-*" | sort | tee file_list.txt | wc -l) ]
          #cat file_list.txt && rm file_list.txt

      #- name: Set up Python
        #uses: actions/setup-python@v5
        #with:
          #python-version: ${{ matrix.python-version }}

      #- name: Install uv
        #uses: astral-sh/setup-uv@v6
        #with:
          #python-version: ${{ matrix.python-version }}

      #- name: Install the project
        #run: uv sync --locked --extra testing

      #- name: Lint
        #run: uv run ruff check

      #- name: Test
        #run: uv run pytest -v

  test-freebsd:
    needs: create-artifacts
    runs-on: ubuntu-latest

    name: Run FreeBSD in VM
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Download shared files
        uses: actions/download-artifact@v5
        with:
          name: artifacts
          path: khm-sources

      - name: Test in FreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          release: "14.3"
          usesh: true
          sync: ".,khm-sources"
          prepare: |
            pkg install -y libxml2 libxslt python311 rust uv
          run: |
            echo "===== Test the presence of artifacts ====="
            #[ 14 -eq $(find khm-sources -type f -name "khm-*" | sort | tee file_list.txt | wc -l) ]
            [ 1 -eq $(find khm-sources -type f -name "khm-*" | sort | tee file_list.txt | wc -l) ]
            cat file_list.txt && rm file_list.txt
            echo "===== Install the project ====="
            uv sync --locked --extra test
            echo "===== Test the code ====="
            uv run pytest -v
